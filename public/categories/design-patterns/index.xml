<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>design patterns on </title>
    <link>/categories/design-patterns/</link>
    <description>Recent content in design patterns on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 Oct 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using ActiveModel to Validate Input</title>
      <link>/post/2012-10-17-using-active-model-to-validate-input/</link>
      <pubDate>Wed, 17 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>/post/2012-10-17-using-active-model-to-validate-input/</guid>
      <description>The other day I was working a project where I had to validate some input before running a query:
Say I have a database of friends and their address, and I want to find all friends with at least 3 letters of the name and an optional zipcode. The controller looks like this:
def index @name = clean_name(params[:name]) @zip = params[:zip] if @name.present? &amp;amp;&amp;amp; @name.size &amp;gt; 2 if @zip.present? &amp;amp;&amp;amp; @zip.</description>
    </item>
    
    <item>
      <title>Builder Pattern in Ruby</title>
      <link>/post/2009-11-24-builder-pattern-in-ruby/</link>
      <pubDate>Tue, 24 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/2009-11-24-builder-pattern-in-ruby/</guid>
      <description>Call me crazy, but this is why I classify myself as a language geek. When I learn something fascinating, i wonder hmm how can I do that with X language? My last postI did an example of the Builder pattern as described in Effective Java by Joshua Bloch. The main motivation for me to use Builder is to have flexible parameter lists, without worrying about order of parameters (there are a few other reasons outlined in the book, but this is what I find cool).</description>
    </item>
    
    <item>
      <title>Builder Pattern in Java</title>
      <link>/post/2009-11-22-builder-pattern-in-java/</link>
      <pubDate>Sun, 22 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/2009-11-22-builder-pattern-in-java/</guid>
      <description>I have been reading Effective Java by Joshua Blochand learned something new so I wanted to try it out.
Making long parameter lists in your constructor is not fun and prone to errors. Previously I thought that best way to handle this situation was to make a bunch of setter methods. This can get kind of tedious and hard to follow when there are alot of parameters:
Address myaddress = new Address(&amp;#34;Chicago&amp;#34;, &amp;#34;IL&amp;#34;); myaddress.</description>
    </item>
    
  </channel>
</rss>