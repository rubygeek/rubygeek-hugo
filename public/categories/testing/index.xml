<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on </title>
    <link>/categories/testing/</link>
    <description>Recent content in testing on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My Robot Framework Setup</title>
      <link>/post/2018-07-05-my-robot-framework-setup/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-07-05-my-robot-framework-setup/</guid>
      <description>I&#39;ve been using Robot Framework for a little over a year now. I have a handful of commits between Robot Framework (RF) and the RF Selenium Library and I&#39;m active in the Robot Slack Group. It is a really nifty test automation framework.
This is a little bit about how my tests are arranged and how I setup a new project.
Sample structure:
├── README.md └── suites ├── api │ ├── api_common.</description>
    </item>
    
    <item>
      <title>Tagging in Robot Framework</title>
      <link>/post/2017-05-23-tagging-in-robot-framework/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017-05-23-tagging-in-robot-framework/</guid>
      <description>I talked about the awesome robot framework in the previous post and I wanted to talk about Tagging since I think this is very useful.
Tagging is one way to group tests so you run a subset of tests. In your test case, add this:
Homepage Loads [Tags] smoke Open Homepage Element Should Be Visible ${FIND_LOGO} [Teardown] Close Browser Results to run just one tag:
▶ robot --include smoke youtube.robot ============================================================================== Youtube :: A test to demo testing YouTube ============================================================================== Homepage Loads | PASS | ------------------------------------------------------------------------------ Search Loads Results | PASS | ------------------------------------------------------------------------------ Youtube :: A test to demo testing YouTube | PASS | 2 critical tests, 2 passed, 0 failed 2 tests total, 2 passed, 0 failed ============================================================================== You can create a focus so it is easy to run that one test as you are developing it.</description>
    </item>
    
    <item>
      <title>Automation Testing with Robot Framework</title>
      <link>/post/2017-05-21-automation-testing-with-robot-framework/</link>
      <pubDate>Sun, 21 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017-05-21-automation-testing-with-robot-framework/</guid>
      <description>On one of my projects recently, I was tasked with finding an automation framework. Looking at my options..
 Cucumber (ruby, although other languages could be used) Capybara / Rspec (ruby) Robot Framework (python)  All of the options for web testing use either Selenium or Watir. I have only did a little with Watir, so I focused on something with Selenium for my first pass of experimentation.
I love testing if you know anything about me, I&#39;m nuts about testing.</description>
    </item>
    
    <item>
      <title>Book Review:  Application Testing with Capybara</title>
      <link>/post/2014-03-09-book-review-application-testing-with-capybara/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/2014-03-09-book-review-application-testing-with-capybara/</guid>
      <description>If you know me, you know I love testing. Model tests, library tests (typically when poro objects) are the most awesome to test and I love it. Controller tests, well, are less fun and testing routes is not bad either. But my least favorite are integration tests.
Cucumber tests seemed awesome in theory and I remember early days in Chicago ruby group there was development on rspec story runner which I believed was written by Dan North, later rewritten as Cucumber.</description>
    </item>
    
    <item>
      <title>Digging through sludge</title>
      <link>/post/2012-08-28-digging-through-sludge/</link>
      <pubDate>Tue, 28 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/post/2012-08-28-digging-through-sludge/</guid>
      <description>###Or how to dive into a large untested project and be productive
This is how I feel sometimes when I come upon a large untested project:
I&#39;ve been talking to folks and pondering this question..how to be effective (in a new to me) large untested project? I was listening to RubyRogues and they mentioned this talk at Cascadia Ruby (I immedately recognize the name as one of the devchix and they praised her talk Therapeutic Refactoring.</description>
    </item>
    
    <item>
      <title>Code Review: Rspec Tests</title>
      <link>/post/2008-04-21-code-review-rspec-tests/</link>
      <pubDate>Mon, 21 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>/post/2008-04-21-code-review-rspec-tests/</guid>
      <description>I am writing a rails application for my mom to enter her bakery orders for her business. The Order page has a form to search or add a new customer, so i can streamline the process as much as possible. In the Order create method, I either get a customer array or a customer ID.
Here&#39;s the order create method in the controller:
def create new_customer = params[:order][:customer_id].blank? ? true : false if new_customer @customer = Customer.</description>
    </item>
    
    <item>
      <title>Response to Test Freak!</title>
      <link>/post/2006-01-26-response-to-test-freak/</link>
      <pubDate>Thu, 26 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>/post/2006-01-26-response-to-test-freak/</guid>
      <description>Note: this post was originally on my &amp;ldquo;PhpGirl&amp;rdquo; blog
Update: Chris Shiflett posted an informative responseon Test-More for PHP and testing in general
I started responding to the comment to my last post, then realized it was going to be long. So I put it in a post.
Thanks Damien Gilles, I have looked at that. Problem is, I have some resistance at work to using outside code. So I would need to work up a case for it beforehand and analyize it.</description>
    </item>
    
    <item>
      <title>Test Freak!</title>
      <link>/post/2006-01-25-test-freak/</link>
      <pubDate>Wed, 25 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>/post/2006-01-25-test-freak/</guid>
      <description>Note: this post was originally on my &amp;ldquo;PhpGirl&amp;rdquo; blog
My two loyal readers know I like testing. Some say I&#39;m sick.
I&#39;m writing a PHP class for a user, and then think.. oh gee, how do I know if this works?? oh I&#39;ll write a Test::Simple for PHP. Yes, I know there exists one already that uses the power of Perl to test PHP files, but I didn&#39;t have time to figure out how to set that up and probably won&#39;t be able to use perl anyways on the production system.</description>
    </item>
    
  </channel>
</rss>